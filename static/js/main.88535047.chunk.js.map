{"version":3,"sources":["images/cloud.png","layouts/Navigation.js","layouts/Header.js","components/Form.js","components/DaysWeatherResult.js","pages/DaysWeather.js","components/CurrentWeatherResult.js","pages/CurrentWeather.js","layouts/Main.js","layouts/Footer.js","layouts/App.js","index.js"],"names":["module","exports","Nav","state","active","isMobile","window","innerWidth","handleClickMenu","setState","addEventListener","this","className","type","onClick","to","exact","React","Component","Header","props","src","image","alt","Form","onSubmit","submit","value","placeholder","onChange","change","DaysWeatherResult","listDays","daysList","map","result","i","name","key","dt","weathers","slice","weatherItem","hours","Date","toLocaleTimeString","timeStyle","icon","weather","main","temp","toFixed","city","DaysWeather","dates","categorizedDates","handleCitySubmit","e","preventDefault","API","fetch","then","response","ok","Error","json","data","prevState","error","list","categorizeDates","catch","err","date","item","dt_txt","split","filter","currArr","indexOf","sortedResults","theDate","push","itemDate","handleChange","target","changeOnNewRoute","Result","pressure","wind","sunrise","sunset","sunriseTime","sunsetTime","iconurl","CurrentWeather","toLocaleString","sys","speed","getParaText","location","pathname","Main","useState","paraText","setParaText","path","render","Footer","App","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.88535047.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud.051b6535.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/hamburgers.css';\r\nimport '../styles/Navigation.css'\r\nimport Hamburger from 'react-hamburgers';\r\n\r\nclass Nav extends React.Component {\r\n    state = {\r\n        active: false,\r\n        isMobile: window.innerWidth < 1200\r\n    }\r\n    handleClickMenu = () => {\r\n        this.setState({\r\n            active: !this.state.active,\r\n\r\n        })\r\n    }\r\n    //mounting/demounting mobile menu\r\n    componentDidMount() {\r\n        window.addEventListener('resize', () => {\r\n            this.setState({\r\n                isMobile: window.innerWidth < 1200\r\n            });\r\n        }, false);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.isMobile ? <nav className=\"mobile\">\r\n                    <Hamburger\r\n                        active={this.state.active}\r\n                        type=\"slider\"\r\n                        onClick={this.handleClickMenu}\r\n                    ></Hamburger>\r\n                    <div className={`menu-container ${this.state.active && 'active'}`}>\r\n                        <ul className=\"menu-list\">\r\n                            <NavLink to=\"/\" exact className=\"menu-list-item\" onClick={this.handleClickMenu}>Aktualna Pogoda</NavLink>\r\n                            <NavLink to=\"/daysweather\" className=\"menu-list-item\" onClick={this.handleClickMenu}>Pogoda na 5 dni</NavLink>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </nav> : null}\r\n                {this.state.isMobile ? null : <nav className=\"desktop\">\r\n                    <ul className=\"menu-list\">\r\n                        <NavLink to=\"/\" exact className=\"menu-list-item\">Aktualna Pogoda</NavLink>\r\n                        <NavLink to=\"/daysweather\" className=\"menu-list-item\">Pogoda na 5 dni</NavLink>\r\n\r\n                    </ul>\r\n                </nav>}\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Nav;","import React from \"react\";\r\nimport \"../styles/Header.css\";\r\nimport Nav from \"./Navigation\";\r\n\r\nimport image from \"../images/cloud.png\";\r\nconst Header = props => {\r\n  return (\r\n    <header>\r\n      <Nav />\r\n      <div className=\"flex-container\">\r\n        <h1 className=\"title\">\r\n          Weather <span>Channel</span>\r\n        </h1>\r\n        <img src={image} alt=\"\" className=\"header-image\" />\r\n      </div>\r\n\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport '../styles/Form.css'\r\nconst Form = props => {\r\n  return (\r\n    <>\r\n      <form className=\"form\" onSubmit={props.submit}>\r\n\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            value={props.value}\r\n            placeholder=\"Wpisz miasto...\"\r\n            onChange={props.change}\r\n          />\r\n          <button>Potwierdź</button>\r\n        </label>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport '../styles/DaysWeatherResult.css'\nconst DaysWeatherResult = (props) => {\n//maping and grouping forecast depends on a day\n  const listDays = props.daysList.map((result, i) => {\n    return (\n      <div className=\"row-container\">\n\n        <p className=\"day\">{result.name}</p>\n        <div className=\"row\" key={result.dt}>\n\n          {\n            result.weathers.slice(0, 4)\n              .map((weatherItem, i) => {\n                const hours = new Date(weatherItem.dt * 1000).toLocaleTimeString([], { timeStyle: 'short' });\n                let icon = `http://openweathermap.org/img/w/${weatherItem.weather[0].icon}.png`\n                return (<div key={weatherItem.dt}>\n                  <div className=\"row-element\"><p className=\"time\">{hours}</p>\n                    <img src={icon} alt=\"weather icon\" />\n                    <p className=\"temp\"> {weatherItem.main.temp.toFixed()}&#176;C</p></div>\n\n\n                </div>)\n              }\n\n\n              )\n          }\n        </div>\n        <div className=\"row\" key={result.dt}>\n          {\n            result.weathers.slice(4)\n              .map((weatherItem, i) => {\n                const hours = new Date(weatherItem.dt * 1000).toLocaleTimeString([], { timeStyle: 'short' });\n                let icon = `http://openweathermap.org/img/w/${weatherItem.weather[0].icon}.png`\n                return (<div key={weatherItem.dt}>\n                  <div className=\"row-element\"><p className=\"time\">{hours}</p>\n                    <img src={icon} alt=\"weather icon\" />\n                    <p className=\"temp\"> {weatherItem.main.temp.toFixed()}&#176;C </p></div>\n\n\n                </div>)\n              }\n\n\n              )\n          }\n        </div></div>\n\n\n    )\n  })\n\n\n\n  return <>\n    <div className=\"city-info\">\n      <h2>Pogoda dla miasta</h2>\n      <h3>{props.city}</h3>\n    </div>\n    <div>{listDays}</div>\n  </>;\n};\n\nexport default DaysWeatherResult;\n","import React from \"react\";\r\nimport Form from \"../components/Form\";\r\nimport \"../styles/DaysWeather.css\";\r\nimport DaysWeatherResult from \"../components/DaysWeatherResult\";\r\nclass DaysWeather extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n    city: '',\r\n    dates: [],\r\n    categorizedDates: []\r\n  };\r\n  handleCitySubmit = e => {\r\n    e.preventDefault();\r\n    const API = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.value}&appid=e7ef248f13087347697525b6e6672047&units=metric`;\r\n    fetch(API)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Spróbuj ponownie\");\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState(prevState => ({\r\n          error: false,\r\n          dates: data.list,\r\n          categorizedDates: this.categorizeDates(data.list),\r\n          city: prevState.value\r\n        }));\r\n      })\r\n      .catch(err => {\r\n        this.setState(prevState => ({\r\n          err: true,\r\n          city: prevState.value\r\n        }));\r\n      });\r\n  };\r\n  categorizeDates = date => {\r\n    const dates = date\r\n      .map((item, i) => {\r\n        return item.dt_txt.split(\" \")[0];\r\n      })\r\n      .filter((item, i, currArr) => {\r\n        return currArr.indexOf(item) === i;\r\n      });\r\n\r\n    let sortedResults = [];\r\n    for (let theDate of dates) {\r\n      sortedResults.push({\r\n        name: theDate,\r\n        weathers: []\r\n      });\r\n\r\n    }\r\n\r\n    for (let item of date) {\r\n      let itemDate = item.dt_txt.split(\" \")[0];\r\n\r\n      for (let result of sortedResults) {\r\n        if (result.name === itemDate) {\r\n          result.weathers.push(item);\r\n        }\r\n      }\r\n    }\r\n\r\n    return sortedResults;\r\n\r\n\r\n\r\n  };\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      value: e.target.value\r\n    });\r\n  };\r\n      //Change  MainText in component\r\n  componentDidMount() {\r\n    const {changeOnNewRoute} = this.props\r\n      changeOnNewRoute();\r\n  }\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n        <Form\r\n          value={this.state.value}\r\n          change={this.handleChange}\r\n          submit={this.handleCitySubmit}\r\n        />\r\n        {this.state.city ? <DaysWeatherResult\r\n          city={this.state.city}\r\n          daysList={this.state.categorizedDates}\r\n        /> : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DaysWeather;\r\n","import React from \"react\";\r\nimport \"../styles/CurrentWeatherResult.css\";\r\nconst Result = props => {\r\n  const { temp, pressure, wind, sunrise, sunset, city, icon } = props.weather;\r\n  const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n  const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n  let iconurl = `http://openweathermap.org/img/w/${icon}.png`\r\n  return (\r\n    <div className=\"weather-card\">\r\n      <div className=\"city-container\">\r\n        <h2>Pogoda dla miasta</h2>\r\n        <h3 className=\"city\">{city}</h3>\r\n\r\n      </div>\r\n      <img src={iconurl} alt=\"weather icon\" className=\"weather-icon\" />\r\n      <div className=\"flex-container\">\r\n        <div className=\"info\">\r\n          <p>Temperatura:</p>\r\n          <p className=\"value\">  {temp} &#176;C      </p>\r\n        </div>\r\n        <div className=\"info\">\r\n          <p>Wschód słońca:</p>\r\n          <p className=\"value\">{sunriseTime} </p>\r\n        </div>\r\n        <div className=\"info\">\r\n          <p>Zachód słońca:</p>\r\n          <p className=\"value\">{sunsetTime}</p>\r\n        </div>\r\n\r\n        <div className=\"info\">\r\n          <p>Wiatr:</p>\r\n          <p className=\"value\">{wind} m/s</p>\r\n        </div>\r\n        <div className=\"info\">\r\n          <p>Ciśnienie:</p>\r\n          <p className=\"value\">{pressure} hPa</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport Form from \"../components/Form\";\r\nimport CurrentWeatherResult from '../components/CurrentWeatherResult'\r\n\r\n\r\nclass CurrentWeather extends React.Component {\r\n  \r\n\r\n\r\n    state = {\r\n        value: \"\",\r\n        date: \"\",\r\n        temp: \"\",\r\n        city: \"\",\r\n        wind: \"\",\r\n        sunrise: \"\",\r\n        sunset: \"\",\r\n        pressure: \"\",\r\n        icon: \"\"\r\n    };\r\n\r\n    handleCitySubmit = e => {\r\n        e.preventDefault();\r\n        const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=e7ef248f13087347697525b6e6672047&units=metric`;\r\n        fetch(API)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw Error(\"Spróbuj ponownie\");\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const date = new Date().toLocaleString();\r\n\r\n                this.setState(prevState => ({\r\n                    error: false,\r\n                    date: date,\r\n                    sunrise: data.sys.sunrise,\r\n                    sunset: data.sys.sunset,\r\n                    temp: data.main.temp.toFixed(),\r\n                    pressure: data.main.pressure,\r\n                    wind: data.wind.speed,\r\n                    city: prevState.value,\r\n                    icon: data.weather[0].icon\r\n                }));\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n                this.setState(prevState => ({\r\n                    err: true,\r\n                    city: prevState.value\r\n                }));\r\n            });\r\n    };\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            value: e.target.value\r\n        });\r\n\r\n\r\n    };\r\n    //Change  MainText in component\r\n    componentDidMount() {\r\n        const {changeOnNewRoute} = this.props\r\n          changeOnNewRoute();\r\n      }\r\n    render() {\r\n \r\n        const { value, city } = this.state\r\n\r\n     \r\n        return (<>\r\n            <Form\r\n                value={value}\r\n                change={this.handleChange}\r\n                submit={this.handleCitySubmit}\r\n                weather={this.state}\r\n            />\r\n            {city ? <CurrentWeatherResult weather={this.state} /> : null}\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default CurrentWeather;","import React, { useState } from \"react\";\r\nimport '../styles/Main.css'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport DaysWeather from '../pages/DaysWeather';\r\nimport CurrentWeather from '../pages/CurrentWeather';\r\n//changing MainText depends on route\r\nfunction getParaText() {\r\n  const route = window.location.pathname;\r\n  switch (route) {\r\n    case \"/weatherchannel\":\r\n      return \"Sprawdź aktualną pogodę w dowolnym mieście\";\r\n    case \"/weatherchannel/daysweather\":\r\n      return \"Sprawdź prognozę na 5 dni w dowolnym mieście\";\r\n    default: return;\r\n  }\r\n}\r\n\r\nexport default function Main() {\r\n  const [paraText, setParaText] = useState(getParaText());\r\n  const changeOnNewRoute = () => {\r\n    setParaText(getParaText());\r\n  };\r\n  return (\r\n    <>\r\n      <main>\r\n        <p className=\"mainText\">{paraText}</p>\r\n        <Switch>\r\n          <Route path=\"/\" exact render={props => (\r\n            <CurrentWeather changeOnNewRoute={changeOnNewRoute} />\r\n          )} />\r\n          <Route path=\"/daysweather\" exact render={props => (\r\n            <DaysWeather changeOnNewRoute={changeOnNewRoute} />\r\n          )} />\r\n        </Switch></main>\r\n\r\n\r\n    </>);\r\n}\r\n\r\n\r\n","import React from \"react\";\nimport \"../styles/Footer.css\";\nconst Footer = () => {\n  return <footer></footer>;\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport \"../styles/App.css\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Main />\n        <Footer />\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './layouts/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}