{"version":3,"sources":["images/cloud.png","layouts/Navigation.js","layouts/Header.js","components/Form.js","components/DaysWeatherResult.js","pages/DaysWeather.js","components/CurrentWeatherResult.js","pages/CurrentWeather.js","layouts/Main.js","layouts/Footer.js","layouts/App.js","index.js"],"names":["module","exports","Nav","state","active","isMobile","window","innerWidth","handleClickMenu","setState","addEventListener","this","className","type","onClick","to","exact","React","Component","Header","props","src","image","alt","Form","onSubmit","submit","value","placeholder","onChange","change","DaysWeatherResult","listDays","daysList","map","result","i","name","key","dt","weathers","slice","weatherItem","hours","Date","toLocaleTimeString","timeStyle","icon","weather","main","temp","toFixed","city","DaysWeather","dates","categorizedDates","handleCityFetch","e","preventDefault","API","fetch","then","response","ok","Error","json","data","prevState","error","list","categorizeDates","catch","err","date","item","dt_txt","split","filter","currArr","indexOf","sortedResults","theDate","push","itemDate","handleCityNameChange","event","target","changeOnNewRoute","handleChange","handleCitySubmit","Result","pressure","wind","sunrise","sunset","sunriseTime","sunsetTime","iconurl","CurrentWeather","toLocaleString","sys","speed","getParaText","location","pathname","Main","useState","paraText","setParaText","path","render","Footer","App","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3f139f2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud.051b6535.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../styles/hamburgers.css\";\r\nimport \"../styles/Navigation.css\";\r\nimport Hamburger from \"react-hamburgers\";\r\n\r\nclass Nav extends React.Component {\r\n  state = {\r\n    active: false,\r\n    isMobile: window.innerWidth < 1200,\r\n  };\r\n  handleClickMenu = () => {\r\n    this.setState({\r\n      active: !this.state.active,\r\n    });\r\n  };\r\n  //mounting/demounting mobile menu\r\n  componentDidMount() {\r\n    window.addEventListener(\r\n      \"resize\",\r\n      () => {\r\n        this.setState({\r\n          isMobile: window.innerWidth < 1200,\r\n        });\r\n      },\r\n      false\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isMobile ? (\r\n          <nav className=\"mobile\">\r\n            <Hamburger\r\n              active={this.state.active}\r\n              type=\"slider\"\r\n              onClick={this.handleClickMenu}\r\n            ></Hamburger>\r\n            <div className={`menu-container ${this.state.active && \"active\"}`}>\r\n              <ul className=\"menu-list\">\r\n                <NavLink\r\n                  to=\"/\"\r\n                  exact\r\n                  className=\"menu-list-item\"\r\n                  onClick={this.handleClickMenu}\r\n                >\r\n                  Aktualna Pogoda\r\n                </NavLink>\r\n                <NavLink\r\n                  to=\"/daysweather\"\r\n                  className=\"menu-list-item\"\r\n                  onClick={this.handleClickMenu}\r\n                >\r\n                  Pogoda na 5 dni\r\n                </NavLink>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        ) : null}\r\n        {this.state.isMobile ? null : (\r\n          <nav className=\"desktop\">\r\n            <ul className=\"menu-list\">\r\n              <NavLink to=\"/\" exact className=\"menu-list-item\">\r\n                Aktualna Pogoda\r\n              </NavLink>\r\n              <NavLink to=\"/daysweather\" className=\"menu-list-item\">\r\n                Pogoda na 5 dni\r\n              </NavLink>\r\n            </ul>\r\n          </nav>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"../styles/Header.css\";\r\nimport Nav from \"./Navigation\";\r\n\r\nimport image from \"../images/cloud.png\";\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <Nav />\r\n      <div className=\"flex-container\">\r\n        <h1 className=\"title\">\r\n          Weather <span>Channel</span>\r\n        </h1>\r\n        <img src={image} alt=\"\" className=\"header-image\" />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../styles/Form.css\";\r\nconst Form = (props) => {\r\n  return (\r\n    <>\r\n      <form className=\"form\" onSubmit={props.submit}>\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            value={props.value}\r\n            placeholder=\"Wpisz miasto...\"\r\n            onChange={props.change}\r\n          />\r\n          <button>Potwierdź</button>\r\n        </label>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport \"../styles/DaysWeatherResult.css\";\nconst DaysWeatherResult = (props) => {\n  //maping and grouping forecast depends on a day\n  const listDays = props.daysList.map((result, i) => {\n    return (\n      <div className=\"row-container\">\n        <p className=\"day\">{result.name}</p>\n        <div className=\"row\" key={result.dt}>\n          {result.weathers.slice(0, 4).map((weatherItem, i) => {\n            const hours = new Date(weatherItem.dt * 1000).toLocaleTimeString(\n              [],\n              { timeStyle: \"short\" }\n            );\n            const icon = `http://openweathermap.org/img/w/${weatherItem.weather[0].icon}.png`;\n            return (\n              <div key={weatherItem.dt}>\n                <div className=\"row-element\">\n                  <p className=\"time\">{hours}</p>\n                  <img src={icon} alt=\"weather icon\" />\n                  <p className=\"temp\">\n                    {\" \"}\n                    {weatherItem.main.temp.toFixed()}&#176;C\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"row\" key={result.dt}>\n          {result.weathers.slice(4).map((weatherItem, i) => {\n            const hours = new Date(weatherItem.dt * 1000).toLocaleTimeString(\n              [],\n              { timeStyle: \"short\" }\n            );\n            const icon = `http://openweathermap.org/img/w/${weatherItem.weather[0].icon}.png`;\n            return (\n              <div key={weatherItem.dt}>\n                <div className=\"row-element\">\n                  <p className=\"time\">{hours}</p>\n                  <img src={icon} alt=\"weather icon\" />\n                  <p className=\"temp\">\n                    {\" \"}\n                    {weatherItem.main.temp.toFixed()}&#176;C{\" \"}\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <div className=\"city-info\">\n        <h2>Pogoda dla miasta</h2>\n        <h3>{props.city}</h3>\n      </div>\n      <div>{listDays}</div>\n    </>\n  );\n};\n\nexport default DaysWeatherResult;\n","import React from \"react\";\r\nimport Form from \"../components/Form\";\r\nimport \"../styles/DaysWeather.css\";\r\nimport DaysWeatherResult from \"../components/DaysWeatherResult\";\r\nclass DaysWeather extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n    city: \"\",\r\n    dates: [],\r\n    categorizedDates: [],\r\n  };\r\n  handleCityFetch = (e) => {\r\n    e.preventDefault();\r\n    const API = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.value}&appid=e7ef248f13087347697525b6e6672047&units=metric`;\r\n    fetch(API)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Spróbuj ponownie\");\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState((prevState) => ({\r\n          error: false,\r\n          dates: data.list,\r\n          categorizedDates: this.categorizeDates(data.list),\r\n          city: prevState.value,\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        this.setState((prevState) => ({\r\n          err: true,\r\n          city: prevState.value,\r\n        }));\r\n      });\r\n  };\r\n  categorizeDates = (date) => {\r\n    const dates = date\r\n      .map((item) => {\r\n        return item.dt_txt.split(\" \")[0];\r\n      })\r\n      .filter((item, i, currArr) => {\r\n        return currArr.indexOf(item) === i;\r\n      });\r\n\r\n    let sortedResults = [];\r\n    for (let theDate of dates) {\r\n      sortedResults.push({\r\n        name: theDate,\r\n        weathers: [],\r\n      });\r\n    }\r\n\r\n    for (let item of date) {\r\n      let itemDate = item.dt_txt.split(\" \")[0];\r\n\r\n      for (let result of sortedResults) {\r\n        if (result.name === itemDate) {\r\n          result.weathers.push(item);\r\n        }\r\n      }\r\n    }\r\n\r\n    return sortedResults;\r\n  };\r\n\r\n  handleCityNameChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  };\r\n  //Change  MainText in component\r\n  componentDidMount() {\r\n    const { changeOnNewRoute } = this.props;\r\n    changeOnNewRoute();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form\r\n          value={this.state.value}\r\n          change={this.handleChange}\r\n          submit={this.handleCitySubmit}\r\n        />\r\n        {this.state.city ? (\r\n          <DaysWeatherResult\r\n            city={this.state.city}\r\n            daysList={this.state.categorizedDates}\r\n          />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DaysWeather;\r\n","import React from \"react\";\r\nimport \"../styles/CurrentWeatherResult.css\";\r\nconst Result = (props) => {\r\n  const { temp, pressure, wind, sunrise, sunset, city, icon } = props.weather;\r\n  const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n  const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n  let iconurl = `http://openweathermap.org/img/w/${icon}.png`;\r\n  return (\r\n    <div className=\"weather-card\">\r\n      <div className=\"city-container\">\r\n        <h2>Pogoda dla miasta</h2>\r\n        <h3 className=\"city\">{city}</h3>\r\n      </div>\r\n      <img src={iconurl} alt=\"weather icon\" className=\"weather-icon\" />\r\n      <div className=\"flex-container\">\r\n        <div className=\"info\">\r\n          <p>Temperatura:</p>\r\n          <p className=\"value\"> {temp} &#176;C </p>\r\n        </div>\r\n        <div className=\"info\">\r\n          <p>Wschód słońca:</p>\r\n          <p className=\"value\">{sunriseTime} </p>\r\n        </div>\r\n        <div className=\"info\">\r\n          <p>Zachód słońca:</p>\r\n          <p className=\"value\">{sunsetTime}</p>\r\n        </div>\r\n\r\n        <div className=\"info\">\r\n          <p>Wiatr:</p>\r\n          <p className=\"value\">{wind} m/s</p>\r\n        </div>\r\n        <div className=\"info\">\r\n          <p>Ciśnienie:</p>\r\n          <p className=\"value\">{pressure} hPa</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport Form from \"../components/Form\";\r\nimport CurrentWeatherResult from \"../components/CurrentWeatherResult\";\r\n\r\nclass CurrentWeather extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n    date: \"\",\r\n    temp: \"\",\r\n    city: \"\",\r\n    wind: \"\",\r\n    sunrise: \"\",\r\n    sunset: \"\",\r\n    pressure: \"\",\r\n    icon: \"\",\r\n  };\r\n\r\n  handleCitySubmit = (e) => {\r\n    e.preventDefault();\r\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=e7ef248f13087347697525b6e6672047&units=metric`;\r\n    fetch(API)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Spróbuj ponownie\");\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const date = new Date().toLocaleString();\r\n\r\n        this.setState((prevState) => ({\r\n          error: false,\r\n          date: date,\r\n          sunrise: data.sys.sunrise,\r\n          sunset: data.sys.sunset,\r\n          temp: data.main.temp.toFixed(),\r\n          pressure: data.main.pressure,\r\n          wind: data.wind.speed,\r\n          city: prevState.value,\r\n          icon: data.weather[0].icon,\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        this.setState((prevState) => ({\r\n          err: true,\r\n          city: prevState.value,\r\n        }));\r\n      });\r\n  };\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  //Change  MainText in component\r\n  componentDidMount() {\r\n    const { changeOnNewRoute } = this.props;\r\n    changeOnNewRoute();\r\n  }\r\n  render() {\r\n    const { value, city } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Form\r\n          value={value}\r\n          change={this.handleChange}\r\n          submit={this.handleCitySubmit}\r\n          weather={this.state}\r\n        />\r\n        {city ? <CurrentWeatherResult weather={this.state} /> : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/Main.css\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport DaysWeather from \"../pages/DaysWeather\";\r\nimport CurrentWeather from \"../pages/CurrentWeather\";\r\n//changing MainText depends on route\r\nfunction getParaText() {\r\n  const route = window.location.pathname;\r\n  switch (route) {\r\n    case \"/weatherchannel\":\r\n      return \"Sprawdź aktualną pogodę w dowolnym mieście\";\r\n    case \"/weatherchannel/daysweather\":\r\n      return \"Sprawdź prognozę na 5 dni w dowolnym mieście\";\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nexport default function Main() {\r\n  const [paraText, setParaText] = useState(getParaText());\r\n  const changeOnNewRoute = () => {\r\n    setParaText(getParaText());\r\n  };\r\n  return (\r\n    <>\r\n      <main>\r\n        <p className=\"mainText\">{paraText}</p>\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={(props) => (\r\n              <CurrentWeather changeOnNewRoute={changeOnNewRoute} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/daysweather\"\r\n            exact\r\n            render={(props) => (\r\n              <DaysWeather changeOnNewRoute={changeOnNewRoute} />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"../styles/Footer.css\";\nconst Footer = () => {\n  return <footer></footer>;\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"../styles/App.css\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Main />\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './layouts/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}